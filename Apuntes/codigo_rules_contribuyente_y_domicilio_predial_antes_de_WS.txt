// consulta de cuenta catastral
$contrato = $base_entity->field_clave_pago['und'][0]['value'];
// limpiar cadena de texto del numero de contrato (por seguridad)
$contrato = preg_replace("/[^0-9URur]/", "", $contrato);

if (isset($contrato)) {
          $query = "SELECT pad.cpadnombre, pad.cpadcvecat, padco.ccolnombre, pad.npadcodpos, padc.ccalnombre, pad.cpadubinoe, pad.cpadubinoi,
          pad.npadsupter, pad.npadsupcon, pad.npadvalter, pad.npadvalcon, pad.npadvalcat 
          FROM padron_catastro.padron pad
          INNER JOIN padron_catastro.calles padc ON padc.ncalcvecal=pad.npadubical
          INNER JOIN padron_catastro.colonias padco ON padco.ncolcvecol=pad.npadubicol
          WHERE pad.cpadnumcta = '". $contrato ."' LIMIT 1";
          $sql_result = db_query($query)->fetchObject();
          if ($sql_result) {
                    if(isset($sql_result->cpadnombre)) {
                              $base_entity->field_pagos_contribuyente['und'][0]['value'] = $sql_result->cpadnombre;
                    } else {
                              $base_entity->field_pagos_contribuyente['und'][0]['value'] = 'Sin datos del contribuyente';
                    }
                    if (isset($sql_result->cpadcvecat) && trim($sql_result->cpadcvecat, " ")) {
                              $base_entity->field_datos_auxiliares2['und'][0]['value'] = 'Clave catastral: ' .$sql_result->cpadcvecat;
                    } else {
                               $base_entity->field_datos_auxiliares2['und'][0]['value'] = 'Clave catastral: sin datos';
                    }

                    // temporalmente, sustituir por código de descuentos
                    $base_entity->field_datos_auxiliares2['und'][1]['value'] = 'Descuento por ley de ingresos: sin datos';

                    if (isset($sql_result->npadvalcat) && trim($sql_result->npadvalcat, " ")) {
                              $base_entity->field_datos_auxiliares2['und'][2]['value'] = 'Valor catastral: ' .$sql_result->npadvalcat;
                    } else {
                               $base_entity->field_datos_auxiliares2['und'][2]['value'] = 'Valor catastral: sin datos';
                    }

                    // temporalmente, sustituir por código de tasa catastral
                    $base_entity->field_datos_auxiliares2['und'][3]['value'] = 'Tasa catastral: sin datos';

                    if (isset($sql_result->npadsupter) && trim($sql_result->npadsupter, " ")) {
                              $base_entity->field_datos_auxiliares2['und'][4]['value'] = 'Superficie del terreno: ' . substr($sql_result->npadsupter,1);
                    } else {
                               $base_entity->field_datos_auxiliares2['und'][4]['value'] = 'Superficie del terreno: sin datos';
                    }
                    if (isset($sql_result->npadsupcon) && trim($sql_result->npadsupcon, " ")) {
                              $base_entity->field_datos_auxiliares2['und'][5]['value'] = 'Superficie de construcción: ' . substr($sql_result->npadsupcon,1);
                    } else {
                               $base_entity->field_datos_auxiliares2['und'][5]['value'] = 'Superficie de construcción: sin datos';
                    }

                    // temporalmente, sustituir por código de tipo del terreno
                    $base_entity->field_datos_auxiliares2['und'][6]['value'] = 'Tipo del terreno: sin datos';
                    // temporalmente, sustituir por código de domicilio notarial
                    $base_entity->field_datos_auxiliares2['und'][7]['value'] = 'Domicilio notarial: sin datos';

                    if (isset($sql_result->ccolnombre)) {
                              $base_entity->field_pagos_colonia['und'][0]['value'] = $sql_result->ccolnombre;
                    }
                    if (isset($sql_result->npadcodpos) && trim($sql_result->npadcodpos, " ")
                                        && ($sql_result->npadcodpos != '0') && isset($base_entity->field_pagos_colonia['und'][0]['value'])) {
                              $base_entity->field_pagos_colonia['und'][0]['value'] .= ' (C.P. ' . $sql_result->npadcodpos . ')';
                    }
                    if (isset($sql_result->ccalnombre)) {
                              $base_entity->field_pagos_domicilio['und'][0]['value'] = $sql_result->ccalnombre;
                    }
                    if (isset($sql_result->cpadubinoe) && trim($sql_result->cpadubinoe, " ") && isset($base_entity->field_pagos_domicilio['und'][0]['value'])) {
                              $base_entity->field_pagos_domicilio['und'][0]['value'] .= ' ' . $sql_result->cpadubinoe;
                    }
                    if (isset($sql_result->cpadubinoi) && trim($sql_result->cpadubinoi, " ") && isset($base_entity->field_pagos_domicilio['und'][0]['value'])) {
                              $base_entity->field_pagos_domicilio['und'][0]['value'] .= ' interior ' . $sql_result->cpadubinoi;
                    }
          } else {
                    drupal_set_message(t('Cuenta predial '. $contrato .' no fue encontrada'), 'warning');
          }
}

// consulta en capa actualizada y sustituir valores en caso que existen nuevos en la capa actaulizada
if (isset($contrato)) {
	  $query = "SELECT fechaalta, nombre, colonia, calle, numext, cp ";
          $query .= "FROM capas_ldm.shp_catastro WHERE nocuenta = '". $contrato ."' LIMIT 1";
          $sql_result = db_query($query)->fetchObject();
          if ($sql_result) { 
		// nombre
		if (isset($sql_result->nombre)) {
			$base_entity->field_pagos_contribuyente['und'][0]['value'] = $sql_result->nombre;
		}
		// domicilio
		if (isset($sql_result->calle) && isset($sql_result->numext)) {
			$base_entity->field_pagos_domicilio['und'][0]['value'] = $sql_result->calle . " " . $sql_result->numext;
		} elseif (isset($sql_result->calle)) {
			$base_entity->field_pagos_domicilio['und'][0]['value'] = $sql_result->calle;
		}
		// colonia
		if ($sql_result->colonia) {
			$base_entity->field_pagos_colonia['und'][0]['value'] = $sql_result->colonia;
		}	
                // código postal
		if (isset($sql_result->cp) && is_numeric($sql_result->cp) && ($sql_result->cp > 0) && ($sql_result->cp < 100000)) {
			$base_entity->field_pago_codigo_postal['und'][0]['value'] = $sql_result->cp;
		}
          }
}

return TRUE; 
